--// Servi√ßos
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

local ModuleScripts = ReplicatedStorage:WaitForChild("ModuleScripts")
local Remote = ReplicatedStorage:WaitForChild("Remote")

--// Remotes incubadora
local UpgradeIncubator = Remote:WaitForChild("UpgradeIncubator")
local AttemptIncubate = Remote:WaitForChild("AttemptIncubate")
local AttemptWithdraw = Remote:WaitForChild("AttemptWithdrawIncubator")

--// Store (GameData)
local LocalDairebStore = require(ModuleScripts:WaitForChild("LocalDairebStore"))
LocalDairebStore.WaitForInit()
local GameDataStore = LocalDairebStore.GetStoreProxy("GameData")

--// Rayfield
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
    Name = "Incubadora FIX - By Luvwas ‚ù§Ô∏è",
    LoadingTitle = "Loading...",
    LoadingSubtitle = "Feito pros Moba <3",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "LuvwasScripts",
        FileName = "IncubadoraFIX"
    }
})

local Tab = Window:CreateTab("üê£ Incubadora", 4483362458)

----------------------------------------------------
-- N√≠veis Incubadoras
----------------------------------------------------
local SectionLevels = Tab:CreateSection("üìä Status das Incubadoras")

local Labels = {}
local incubatorMap = {
    ["A"] = "1",
    ["B"] = "2",
    ["C"] = "3",
    ["D"] = "4",
    ["E"] = "5",
    ["F"] = "6",
}

for id, idx in pairs(incubatorMap) do
    Labels[id] = Tab:CreateLabel("Incubadora " .. idx .. " ‚Üí Carregando...")
end

-- Atualizador de n√≠veis
task.spawn(function()
    while task.wait(2) do
        local levels = GameDataStore:GetData("IncubatorLevels") or {}
        for id, lbl in pairs(Labels) do
            local lvl = levels[id] or 0
            lbl:Set("‚≠ê Incubadora " .. incubatorMap[id] .. " ("..id..") ‚Üí Level " .. lvl)
        end
    end
end)

----------------------------------------------------
-- Escolher Incubadora
----------------------------------------------------
local incubatorChoice = "A"

local DropdownIncubator = Tab:CreateDropdown({
    Name = "üìç Escolher Incubadora",
    Options = {"1Ô∏è‚É£ Incubadora (A)", "2Ô∏è‚É£ Incubadora (B)", "3Ô∏è‚É£ Incubadora (C)", "4Ô∏è‚É£ Incubadora (D)", "5Ô∏è‚É£ Incubadora (E)", "6Ô∏è‚É£ Incubadora (F)"},
    CurrentOption = {"1Ô∏è‚É£ Incubadora (A)"},
    Callback = function(opt)
        local map = {
            ["1Ô∏è‚É£ Incubadora (A)"]="A",
            ["2Ô∏è‚É£ Incubadora (B)"]="B",
            ["3Ô∏è‚É£ Incubadora (C)"]="C",
            ["4Ô∏è‚É£ Incubadora (D)"]="D",
            ["5Ô∏è‚É£ Incubadora (E)"]="E",
            ["6Ô∏è‚É£ Incubadora (F)"]="F"
        }
        incubatorChoice = map[opt[1]] or "A"
        Rayfield:Notify({Title="‚úÖ Selecionado", Content="Agora usando a incubadora "..incubatorChoice})
    end,
})

----------------------------------------------------
-- Pets Dropdown
----------------------------------------------------
local petChoice = nil
local DropdownPets

local function refreshPets()
    local pets = GameDataStore:GetData("Pets") or {}
    local petOptions = {}

    for _, pet in ipairs(pets) do
        local uid = tostring(pet.UID)
        local name = pet.PetId or "Unknown"
        table.insert(petOptions, string.format("üêæ %s  |  UID: %s", name, uid))
    end

    if DropdownPets then
        DropdownPets:Set(petOptions)
    else
        DropdownPets = Tab:CreateDropdown({
            Name = "üêæ Escolher Pet",
            Options = petOptions,
            CurrentOption = {},
            Callback = function(opt)
                local match = string.match(opt[1], "UID:%s*(%d+)")
                petChoice = tonumber(match)
                Rayfield:Notify({Title="üêæ Pet Selecionado", Content=opt[1]})
            end,
        })
    end
end

Tab:CreateButton({
    Name = "üîÑ Atualizar Lista de Pets",
    Callback = refreshPets,
})

----------------------------------------------------
-- Bot√µes de Controle
----------------------------------------------------
Tab:CreateSection("‚öôÔ∏è Controles")

Tab:CreateButton({
    Name = "üì• Colocar Pet no Incubador",
    Callback = function()
        if petChoice and incubatorChoice then
            AttemptIncubate:FireServer(petChoice, incubatorChoice)
            Rayfield:Notify({Title="‚úÖ Sucesso", Content="Pet enviado para incubadora "..incubatorChoice})
        else
            Rayfield:Notify({Title="‚ùå Erro", Content="Selecione incubadora e pet primeiro"})
        end
    end,
})

Tab:CreateButton({
    Name = "üì§ Retirar Pet do Incubador",
    Callback = function()
        if incubatorChoice then
            AttemptWithdraw:FireServer(incubatorChoice)
            Rayfield:Notify({Title="‚úÖ Sucesso", Content="Pet retirado da incubadora "..incubatorChoice})
        end
    end,
})

Tab:CreateButton({
    Name = "‚¨ÜÔ∏è Upar Incubador",
    Callback = function()
        if incubatorChoice then
            UpgradeIncubator:FireServer(incubatorChoice)
            Rayfield:Notify({Title="‚ö° Upgrade", Content="Upgrade solicitado para "..incubatorChoice})
        end
    end,
})

----------------------------------------------------
-- Auto Init
----------------------------------------------------
refreshPets()
