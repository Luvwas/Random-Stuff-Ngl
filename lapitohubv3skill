-- Lapo Hub V3 - Ingame (Auto Use Skill) | FIXED & CLEAN
-- Skills organizadas alfabeticamente e completas

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer
local RemoteFolder = ReplicatedStorage:WaitForChild("Remote")
local AbilityRemote = RemoteFolder:WaitForChild("UnitAbility")
local UnitsFolder = Workspace:WaitForChild("Units")

local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
    Name = "Lapo Hub V3 - Ingame",
    LoadingTitle = "Lapo Hub V3 - Ingame",
    LoadingSubtitle = "Ver 3.05 | Made by Luvwas",
    ConfigurationSaving = { Enabled = true, FolderName = "LapoHubV3", FileName = "Ingame" },
    Discord = { Enabled = false },
    KeySystem = false
})

local Tab = Window:CreateTab("Auto Use Skill", 4483362458)
Rayfield:Notify({ Title = "Lapo Hub V3 - Ingame", Content = "VersÃ£o 3.05 carregada com sucesso!", Duration = 5 })

-- Utils
local function asString(opt)
    if type(opt) == "table" then
        return tostring(opt[1] or "")
    end
    return tostring(opt or "")
end

local function IsOwnedUnit(instance)
    local info = instance:FindFirstChild("Info")
    local owner = info and info:FindFirstChild("Owner")
    return owner and owner.Value == LocalPlayer.Name
end

local function GetPlayerUnits()
    local list = {}
    for _, unit in ipairs(UnitsFolder:GetChildren()) do
        if IsOwnedUnit(unit) then table.insert(list, unit.Name) end
    end
    table.sort(list)
    return list
end

local function SafeRefreshDropdown(dropdown, options, keepCurrent)
    if not dropdown then return end
    local ok = pcall(function()
        dropdown:Refresh(options, keepCurrent and true or false)
    end)
    if not ok then
        pcall(function()
            if dropdown.SetOptions then
                dropdown:SetOptions(options)
            end
        end)
    end
end

local function SafeSetDropdown(dropdown, singleOption)
    if not dropdown then return end
    pcall(function()
        dropdown:Set({singleOption})
    end)
end

-- LISTA COMPLETA DE SKILLS (ORGANIZADA ALFABETICAMENTE)
local AllSkills = {
    "10 Year","1000 Year","120% Power",
    "Abyssal Worm","Absolute Hypnosis","Absolute Reconstruction","Actualization Revert",
    "Ado Buff","Adolla Burst","Affinity Change","Agidy","All Out","All Seeing Eyes",
    "Allas Workshop","Aleph","Amulet Angel","Amulet Clover","Amulet Devil","Amulet Dia",
    "Amulet Fortune","Amulet Heart","Amulet Jewel Heart","Amulet Spade","Angel Rewind","Angel Revive",
    "Arabaki","Arise","Armadura Fairy","Ataraxia Armor","Atelier Logic","Athiel",
    "Attack Position","Attempt Drain","Base Armor","Belial","Berserker Rage","Berserk Shirou",
    "Bet","Bigbang Violet","Black Wing Armor","Blossom Heal","Blood Moon","Bloodcurdle",
    "Bloodlust","Blue Rose","Blue Tech","Cauterization","Calamity Rain","Charisma of Desire",
    "Chocolate Beam","Clear Heart Clothing","Combat Stance","Conqueror","Copy Slot1","Copy Slot2",
    "Copy Slot3","Copy Slot4","Copy Slot5","Copy Slot6","Cotaro","Cotaro & Others",
    "Cotaro & Tochi","Crumble Speech","Crystal Atelier","Dalet","Dark Swordsman","Dark Swordsman & Ruffy",
    "Dark Swordsman & Uchigo","DarkBeardActive","Death Dragon Explosion","Death Line","Death Shot",
    "Defensive Adaptation","Demon","Detonate","Devils Tune","Die Speech","Divine Treasure",
    "Doge Protection","Domination","Doomshriek","Dragon Heart","Dragon Meal","Dragon Shield",
    "Draconic Awaken","Dragonic Force","DragonRewind","DragonTS","Drain","Drain II",
    "Dress","Durandal","Emotional","Enuma Elish","Evil Domain","Evil Domain EX",
    "Explode Speech","Faulty Atomic","Fatal Point Attack","Fetch Failnaught","Final Art","Final Mugetsu",
    "Flame Empress Armor","Flight Armor","Flower Shirou","Flowers on Earth","Friction Plundering","Full Force",
    "Full Incantation Kurohitsugi","Furioso","Gamble Queen All In","Gamble Queen Card","Gamble Queen Food",
    "Gamble Queen Jack","Gamble Queen Pachinko","Gimel","Go Beyond","God Sacrifice","Golden Apple",
    "Golden Recovery","Golden Theater","Great Seal","Hades Door","Hairpin","Hakai",
    "Hakari Domain","Halloween","Heal Bubble","Heal Hado","Heart Speeders","Heavens Wheel Armor",
    "Heavy Sand Storm","Hei","Het","Hogyoku Evolution","Hogyoku Evolution II","Hogyoku Evolution III",
    "Hollow Mask","Holy Armor","Horn Of Rewind","HunterKid End","I am Atomic","I am Atomic Radar",
    "I am Atomic Rain","I am Atomic Sword","I am Recovery Atomic","I am the All Range Atomic","Ice Curse",
    "Ice Hell","IceAge Bankai","Idol Buff","Illusion Ninja Clone","Im ATOMIC","Immortal",
    "Infinite Blade World","Itto Ashura","Itto Shura","Judge Domain","Justice Hall","Kaioken",
    "Kamui Attack","Kannonbiraki Benihime Aratame","Kill","Kill all","King Treasure Dainsleif","King Treasure Enkidu",
    "King Treasure Halberd","King Treasure Ig-Alima","King Treasure Merodach","King Treasure True Nine Lives",
    "Kings Engine","Knife Shirou","Koji","Koji & Kongkun","Koji & Tochi","Konghan SSJ2",
    "Kongkun","Kongkun & Ruffy","Kongkun & Uchigo","Kongkun[GT] SSJ","Kriezer Training","Kroly Rage",
    "Kurama Buff","Kurama Buff II","Kurohitsugi","Kyoka Suigetsu","Lai Rhyme Goodfellow","Lightning Armor",
    "Lightning Empress Armor","Luminosite Eternelle","Magical Sea","Magical Splash Flare","Magic Mark",
    "Magnet Prison","Malevolent Shrine","Mana Buff","Marble Phantasm","Mass Manipulation","Memory of Londinium",
    "Metamorphosis","Meteor Volcano","Minazuki","Mook Workshop","Morning Star Armor","Nakagami Armor",
    "Next Generation","Night Queen","Night Sky","One Meteor","Open Heart Full Volume","Orbital Sacrifice",
    "Orches TS","Orotario","Overdrive","Parody Combo","Perfect Susanoo","Perfect Susanoo [First]",
    "Perfect Susanoo [Last]","Perfect Susanoo First","Perfect Susanoo Last","Persona Alice","Persona Raoul",
    "Persona Seth","Persona Yoshitsune","Phantoms Dance","Phantoms Dance EX","Phantoms Rampage","Phantoms Rampage EX",
    "Phantoms Show","Phantoms Show EX","Phosphor","Plasmatic Robe","Pom pom Pom","Power Wish",
    "Pressure Shun","Protection Barrier","Protection Wish","Pure Armor","Purgatory Armor","Purple Tech",
    "Qemetiel","Quincy Force","Ragnarok","Rain Shards","Ranga Workshop","Ray Horizon",
    "Recovery Angel","Red Eye Sword","Red Rampage","Red Tech","Remake Honey","Remake Honey Special",
    "Return By Death","Return To Zero","Reverse Cursed","Reverse Gravity","Reverted Bankai","Reverted World",
    "Revitalize Soul","Revive","Rewind Punch","Rho Ias","Rich Wish","River Of Death",
    "Road of Stars","Road Roller","Roadless Camelot","Robe of Yuen","Rock and Roll","Round of Avalon",
    "Ruffy","Ruffy & Koji","Rukia Dance","Ruler Blessing","Rumbling","Rupture Sword",
    "Sacrifice Ghost","Sacrifice of Pride","Sakura Field","Sandevistan","Savior of the AWTD","Savior Spear",
    "Second Generation","Serious Punch","Serious Squirt Gun","Shadow Domain","Shadow TS","Shambles",
    "Shoko Power Up","Sis","Solo Act","Spacequake","Star Platinum TS","Stars in Heaven",
    "Stellar Gravity","Summon Beelzebub","Sun Wheel","Super Spirit Bomb","Supernova Trap","Swap Ink",
    "Sweet Applique","Sword Shirou","Tamamo","Tet","The Fascinating Horizon","The Grappler Buff",
    "The Greatest Wall","Third Generation","Third Impact","Tides of Time","Time Lock","Time Rewind",
    "Time Skip","Time Traveler","Tochi","Tochi & Others","Trust","Twinkle Shield",
    "Two Meteors","Uchigo","Uchigo & Tochi","Ultimate Blade Work","Unachievable","Universe Hope Cloak",
    "UQ Revive","Usage 1000 years","Uzumaki","Vav","Veshikun Taunting","Vimana",
    "Virtual Black Hole","Vitality Sacrifice","Void Domain","Void Tech","Void Tech 0_2s","Volcano Domain",
    "War Devil Aquarium Spear","War Devil Room","War Devil Spinal Cord","War Devil Uniform Sword",
    "Weapon Combo","Wheels Industry","World Flower","Youre Next","Yud","Yud Aleph",
    "Yud Bet","Za Warudo","Zayin","Zelkova Workshop"
}

-- Estado
local allUnits = GetPlayerUnits()
local selectedUnit, selectedSkill
local UnitDropdown, SkillDropdown, StarkeiTargetDropdown
local starkeiTarget
local autoUse = false
local autoStarkei = false

local function UniqueList(list)
    local seen, out = {}, {}
    for _, v in ipairs(list) do
        if not seen[v] then
            seen[v] = true
            table.insert(out, v)
        end
    end
    return out
end

local function RefreshAllDropdowns()
    allUnits = GetPlayerUnits()
    local uniqueUnits = UniqueList(allUnits)

    if UnitDropdown then
        SafeRefreshDropdown(UnitDropdown, uniqueUnits, true)
    end
    if StarkeiTargetDropdown then
        SafeRefreshDropdown(StarkeiTargetDropdown, uniqueUnits, true)
    end

    Rayfield:Notify({ Title = "Refresh", Content = "Found " .. #uniqueUnits .. " units", Duration = 2 })
end

-- UI: BotÃ£o Refresh
Tab:CreateButton({
    Name = "ðŸ”„ Refresh Units",
    Callback = function()
        RefreshAllDropdowns()
    end
})

-- Dropdown de Unidade
UnitDropdown = Tab:CreateDropdown({
    Name = "Select Unit",
    Options = allUnits,
    CurrentOption = (#allUnits > 0 and {allUnits[1]} or {"None"}),
    MultipleOptions = false,
    Flag = "UnitDropdown",
    Callback = function(option)
        selectedUnit = asString(option)
        Rayfield:Notify({ Title = "Unit Selected", Content = "Unit: " .. selectedUnit, Duration = 2 })
    end
})

-- Input de busca de skill
local SearchInput = Tab:CreateInput({
    Name = "Search Skills",
    PlaceholderText = "Type to filter skills...",
    RemoveTextAfterFocusLost = false,
    CurrentValue = "",
    Callback = function(text)
        local q = string.lower(text or "")
        if q == "" then
            SafeRefreshDropdown(SkillDropdown, AllSkills, false)
            return
        end
        local filtered = {}
        for _, skillName in ipairs(AllSkills) do
            if string.find(string.lower(skillName), q, 1, true) then
                table.insert(filtered, skillName)
            end
        end
        if #filtered == 0 then
            filtered = {"(no match)"}
        end
        SafeRefreshDropdown(SkillDropdown, filtered, false)
    end
})

-- Dropdown de Skill
SkillDropdown = Tab:CreateDropdown({
    Name = "Select Skill",
    Options = AllSkills,
    CurrentOption = {"None"},
    MultipleOptions = false,
    Flag = "SkillDropdown",
    Callback = function(option)
        selectedSkill = asString(option)
        Rayfield:Notify({ Title = "Skill Selected", Content = selectedSkill, Duration = 2 })
    end
})

if #allUnits > 0 then
    selectedUnit = allUnits[1]
    SafeSetDropdown(UnitDropdown, selectedUnit)
end

local function FireAbility(unitName, skillName)
    if not unitName or unitName == "" then return false, "Select a unit" end
    if not skillName or skillName == "" or skillName == "None" or skillName == "(no match)" then
        return false, "Select a skill"
    end
    local unit = UnitsFolder:FindFirstChild(unitName)
    if not unit then return false, "Unit not found" end
    local owner = unit:FindFirstChild("Info") and unit.Info:FindFirstChild("Owner")
    if not (owner and owner.Value == LocalPlayer.Name) then return false, "Not your unit" end
    local ok, err = pcall(function()
        AbilityRemote:FireServer(skillName, unit)
    end)
    if not ok then return false, tostring(err) end
    return true
end

-- Toggle: Auto Skill
Tab:CreateToggle({
    Name = "Auto Use Selected Skill",
    CurrentValue = false,
    Flag = "AutoSkill",
    Callback = function(state)
        autoUse = state
        if state then
            Rayfield:Notify({ Title = "Auto Skill", Content = "Started every 1s", Duration = 3 })
            task.spawn(function()
                while autoUse do
                    if selectedUnit and selectedSkill and selectedSkill ~= "None" then
                        local ok, err = FireAbility(selectedUnit, selectedSkill)
                        if not ok and err then
                            Rayfield:Notify({ Title = "Auto Skill Error", Content = err, Duration = 2 })
                        end
                    end
                    task.wait(1)
                end
            end)
        else
            Rayfield:Notify({ Title = "Auto Skill", Content = "Stopped", Duration = 2 })
        end
    end
})

-- BotÃ£o: Uso manual
Tab:CreateButton({
    Name = "âš¡ Use Selected Skill Manually",
    Callback = function()
        if not selectedUnit or selectedUnit == "" then
            Rayfield:Notify({ Title = "Manual Use Error", Content = "Select a unit first", Duration = 2 })
            return
        end
        if not selectedSkill or selectedSkill == "" or selectedSkill == "None" then
            Rayfield:Notify({ Title = "Manual Use Error", Content = "Select a skill first", Duration = 2 })
            return
        end
        local ok, err = FireAbility(selectedUnit, selectedSkill)
        if ok then
            Rayfield:Notify({ Title = "Manual Use", Content = "Used " .. selectedSkill, Duration = 2 })
        else
            Rayfield:Notify({ Title = "Manual Use Error", Content = err or "Failed", Duration = 3 })
        end
    end
})

-- SeÃ§Ã£o: Buffs rÃ¡pidos
Tab:CreateSection("Best Buffs")
local BuffButtons = {"Road of Stars","War Devil Uniform Sword", "Overdrive","Kaioken","Flight Armor","Hakari Domain"}
for _, skill in ipairs(BuffButtons) do
    Tab:CreateButton({
        Name = "Use " .. skill,
        Callback = function()
            if not selectedUnit or selectedUnit == "" then
                Rayfield:Notify({ Title = "Buffer Error", Content = "Select a unit first", Duration = 2 })
                return
            end
            local ok, err = FireAbility(selectedUnit, skill)
            if ok then
                Rayfield:Notify({ Title = "Buffer", Content = "Used " .. skill, Duration = 2 })
            else
                Rayfield:Notify({ Title = "Buffer Error", Content = err or "Failed", Duration = 3 })
            end
        end
    })
end

-- SeÃ§Ã£o: Starkei
Tab:CreateSection("Starkei Functions")

Tab:CreateButton({
    Name = "ðŸ”„ Refresh Units (Starkei)",
    Callback = function()
        RefreshAllDropdowns()
    end
})

StarkeiTargetDropdown = Tab:CreateDropdown({
    Name = "Select Unit for Starkei Skill",
    Options = allUnits,
    CurrentOption = (#allUnits > 0 and {allUnits[1]} or {"None"}),
    MultipleOptions = false,
    Flag = "StarkeiTarget",
    Callback = function(option)
        starkeiTarget = asString(option)
        Rayfield:Notify({ Title = "Starkei Target", Content = "Target: " .. starkeiTarget, Duration = 2 })
    end
})

if #allUnits > 0 then
    starkeiTarget = allUnits[1]
    SafeSetDropdown(StarkeiTargetDropdown, starkeiTarget)
end

-- Toggle: Auto Starkei
Tab:CreateToggle({
    Name = "Auto Use Starkei Skill on Target",
    CurrentValue = false,
    Flag = "AutoStarkei",
    Callback = function(state)
        autoStarkei = state
        if state then
            Rayfield:Notify({ Title = "Auto Starkei", Content = "Started every 1s", Duration = 3 })
            task.spawn(function()
                while autoStarkei do
                    if starkeiTarget and starkeiTarget ~= "" then
                        local ok, err = FireAbility(starkeiTarget, "Savior of the AWTD")
                        if not ok and err then
                            Rayfield:Notify({ Title = "Auto Starkei Error", Content = err, Duration = 2 })
                        end
                    end
                    task.wait(1)
                end
            end)
        else
            Rayfield:Notify({ Title = "Auto Starkei", Content = "Stopped", Duration = 2 })
        end
    end
})

-- Converter para Starkei
Tab:CreateButton({
    Name = "Convert Selected Unit to Starkei",
    Callback = function()
        if not selectedUnit or selectedUnit == "" then
            Rayfield:Notify({ Title = "Convert Error", Content = "Select a unit first", Duration = 2 })
            return
        end
        local unit = UnitsFolder:FindFirstChild(selectedUnit)
        if not unit then
            Rayfield:Notify({ Title = "Convert Error", Content = "Unit not found", Duration = 2 })
            return
        end
        local owner = unit:FindFirstChild("Info") and unit.Info:FindFirstChild("Owner")
        if not (owner and owner.Value == LocalPlayer.Name) then
            Rayfield:Notify({ Title = "Convert Error", Content = "Not your unit", Duration = 2 })
            return
        end

        local oldName = unit.Name
        unit.Name = "Starkei"
        Rayfield:Notify({ Title = "Converted", Content = oldName .. " â†’ Starkei", Duration = 3 })

        task.wait(0.5)
        RefreshAllDropdowns()

        if UnitsFolder:FindFirstChild("Starkei") then
            selectedUnit = "Starkei"
            starkeiTarget = "Starkei"
            SafeSetDropdown(UnitDropdown, "Starkei")
            SafeSetDropdown(StarkeiTargetDropdown, "Starkei")
        end
    end
})
